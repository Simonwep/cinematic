(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function n(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerpolicy&&(s.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?s.credentials="include":o.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(o){if(o.ep)return;o.ep=!0;const s=n(o);fetch(o.href,s)}})();const u=e=>{let t=-1;const n=s=>{e(s),t=requestAnimationFrame(n)},r=()=>cancelAnimationFrame(t);return{start:()=>{r(),t=requestAnimationFrame(n)},stop:r}},l=(e,t)=>t instanceof HTMLElement?t:e.querySelector(t),E=(e,t)=>{const n=new ResizeObserver(t);return n.observe(e),()=>n.unobserve(e)},L=(e,t)=>{const n=u(t),r=()=>{e.currentTime=0,t()};return e.addEventListener("play",n.start),e.addEventListener("pause",n.stop),e.addEventListener("loadeddata",r),e.addEventListener("seeked",t),()=>{n.stop(),e.removeEventListener("play",n.start),e.removeEventListener("pause",n.stop),e.removeEventListener("loadeddata",r),e.removeEventListener("seeked",t)}},w="1.0.0",y=e=>{var c,d;const t=(c=e.document)!=null?c:window.document,n=l(t,e.target),r=l(t,e.src),o=(d=e.sensitivity)!=null?d:.1;if(r instanceof HTMLVideoElement)if(n instanceof HTMLCanvasElement){if(!(o>0&&o<=1))throw new Error(`Smoothness must be an integer greater than 0 and less or equal than 1, received ${o}`)}else throw new Error("Target element has to be a canvas.");else throw new Error(`Received invalid src, expects selector to HTMLVideoElement or the element itself but got ${r==null?void 0:r.tagName}`);const s=n.getContext("2d");s.imageSmoothingEnabled=!1;let i=!1;const a=u(()=>{const{width:g,height:p}=n;i&&g&&p&&(s.globalAlpha=.01,s.drawImage(r,0,0),i=!1)}),v=E(r,()=>{n.width=r.videoWidth,n.height=r.videoHeight}),h=L(r,()=>{i=!0});return a.start(),()=>{a.stop(),v(),h()}};const m=Array.from(document.querySelectorAll(".controls > button")),f=document.querySelector(".video-container > .video");y({target:".video-container > .video-background",src:f});for(const e of m)e.addEventListener("click",()=>{f.src=`/videos/${e.getAttribute("name")}.mp4`,m.forEach(t=>t.classList[t===e?"add":"remove"]("active"))});console.log(`Using cinematic v${w}`);
